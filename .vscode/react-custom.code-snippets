{
    // Place your user workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "React control component": {
        "scope": "javascript,javascriptreact,typescript,typescriptreact",
        "prefix": "rcc",
		"body": [
			"import { FC } from 'react';",
            "// UTILS",
			"import cx from 'clsx';",
			"import { useValueAndKey } from 'utils/hooks';",
            "// COMPONENTS",
            "\nimport styles from './$1.scss';",
			"\ntype Props = DefaultComponentProps & {};",
			"\nconst $1: FC<Props> = ({ name, children, className }) => {",
				"\tconst controlName = useValueAndKey(name, 'cs-$2');",
				"\tconst controlClasses = cx(styles.cs$1, controlName, className);",
				"\n\treturn <div data-cy={controlName} className={controlClasses}></div>;",
			"};",
			"\nexport default $1;",
			""
		]
    }
}
